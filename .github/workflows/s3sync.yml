name: SyncToS3-IDrive
# Controls when the action will run. 
# on: [ push, pull_request ]
on:
  release:
    types: [prereleased, published]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
# This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # https://github.com/marketplace/actions/s3-sync 
    steps:
      - uses: actions/checkout@master
      - name: Test
        run: |
          echo ${{ github.ref_name }}

      - name: Retrieve JSON File
        id: json_properties
        uses: zoexx/github-action-json-file-properties@release
        with:
          file_path: "./.github/package.json"
          
      - name: Create RepoName folder
        run: echo "REPO_NAME=${{steps.json_properties.outputs.name}}" >> $GITHUB_ENV

      - name: Create folder and removing .git and .github dir
        run: |
          mkdir ./s3_upload
          rsync -a ./ ./s3_upload/$REPO_NAME
          rm -rf ./s3_upload/$REPO_NAME/.git*
          rm -rf ./s3_upload/$REPO_NAME/s3_upload

      - name: Set Upload folder var on S3 bucket based on platform
        run: |
          echo "UPLOAD_FOLDER=${{steps.json_properties.outputs.platform}}/${{steps.json_properties.outputs.product_category}}/${{steps.json_properties.outputs.name}}/${{github.ref_name}}" >> $GITHUB_ENV

      - name: Set Uploader Folder latest var on S3 bucket on platform
        run: |
          echo "UPLOAD_FOLDER_LATEST=${{steps.json_properties.outputs.platform}}/${{steps.json_properties.outputs.product_category}}/${{steps.json_properties.outputs.name}}/latest" >> $GITHUB_ENV

      - name: Retrieve S3 JSON File
        id: s3_key
        uses: zoexx/github-action-json-file-properties@release
        with:
          file_path: "./.github/s3.json"

      #make variable for s3 info
      - name: Basic Info for S3 Profile [Other keep on secret]
        run: |
          echo "S3_REGION=${{steps.s3_key.outputs.region}}" >> $GITHUB_ENV
          echo "S3_ENDPOINT=${{steps.s3_key.outputs.endpoint}}" >> $GITHUB_ENV
          echo "S3_BUCKET=${{steps.s3_key.outputs.bucket}}" >> $GITHUB_ENV

      - name: Zip the repo and Pack to S3_Upload folder before uploading
        uses: vimtor/action-zip@v1
        with:
          files: ./s3_upload
          dest: ./zipped/${{steps.json_properties.outputs.name}}.zip

      # Copy the version.xml file to the zipped folder
      - name: Copy the version.xml file
        run: |
          cp -p ./version.xml ./zipped/version.xml     

      #everthing is working now, then upload
      - name: Upload Zip File to S3 Folder ( Version )
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete --include '*' --exclude './.git/*' --exclude './.github/*'  --exclude './.vscode/*' --exclude '.gitignore' --exclude './s3_upload/*' --exclude './.gitmodules'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: $S3_REGION 
          AWS_S3_ENDPOINT:  $S3_ENDPOINT 
          AWS_S3_BUCKET: $S3_BUCKET
          SOURCE_DIR: './zipped/'
          DEST_DIR: '/$UPLOAD_FOLDER/'

      - name: Upload Zip File to S3 Folder ( latest )
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete --include '*' --exclude './.git/*' --exclude './.github/*'  --exclude './.vscode/*' --exclude '.gitignore' --exclude './s3_upload/*' --exclude './.gitmodules'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: $S3_REGION 
          AWS_S3_ENDPOINT:  $S3_ENDPOINT 
          AWS_S3_BUCKET: $S3_BUCKET
          SOURCE_DIR: './zipped/'
          DEST_DIR: '/$UPLOAD_FOLDER_LATEST/'